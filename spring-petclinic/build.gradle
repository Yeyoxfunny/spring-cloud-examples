plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'eclipse'
}

group = 'org.springframework.samples'
version = '2.4.4'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

eclipse {
    sourceSets {
        main {
            java {
                srcDirs += ["build/generated/sources/annotationProcessor/java/main"]
            }
        }
    }
}


ext {
    set('springCloudVersion', "2020.0.2")
    set("boostrapVersion", "3.3.6")
    set("jQueryVersion", "1.11.4")
    set("jQueryUIVersion", "2.2.4")
    set("mapStructVersion", "1.4.2.Final")
}

dependencies {
    // Spring and Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Cloud dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    // Caching
    implementation 'javax.cache:cache-api'
    implementation 'org.ehcache:ehcache'

    implementation 'org.webjars:webjars-locator-core'
    implementation "org.webjars:jquery:${jQueryUIVersion}"
    implementation "org.webjars:jquery-ui:${jQueryVersion}"
    implementation "org.webjars:bootstrap:${boostrapVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
